#compdef repodoc

# AUTOMATCALLY GENERATED by `shtab`

_shtab_repodoc_options_=(
  "(- :)"{-h,--help}"[show this help message and exit]"
  {-u,--use-config-file}"[use config file for template variables.]"
  {-bc,--bash-completion}"[Print Bash Completion Script.]"
  {-zc,--zsh-completion}"[Print ZSH Completion Script.]"
  {-vv,--verbose}"[Turn on Verbose Mode.]"
  "(- :)"{-v,--version}"[show program\'s version number and exit]"
)

_shtab_repodoc_commands_() {
  local _commands=(
    "ch:"
    "comh:"
    "community_health:"
    "config:"
    "docs:"
    "dot_files:"
    "dots:"
    "get_vars:"
    "licence:"
    "pypi:"
    "pypi_project:"
    "readme:"
    "sphinx:"
    "sphinx_docs:"
  )

  _describe 'repodoc commands' _commands
}

_shtab_repodoc_ch=(
  "(- :)"{-h,--help}"[show this help message and exit]"
)

_shtab_repodoc_comh=(
  "(- :)"{-h,--help}"[show this help message and exit]"
)

_shtab_repodoc_community_health=(
  "(- :)"{-h,--help}"[show this help message and exit]"
)

_shtab_repodoc_config=(
  "(- :)"{-h,--help}"[show this help message and exit]"
  {-f,--file}"[use given config file]:config_file:"
  {-l,--list}"[list all]"
  "--init[Generate Sample Configuration File.]"
  "--get[get value\: name]:get:"
  "--set[set value of variable\: name value]:set:"
  "--add[add a new variable\: name value]:add:"
)

_shtab_repodoc_docs=(
  "(- :)"{-h,--help}"[show this help message and exit]"
)

_shtab_repodoc_dot_files=(
  "(- :)"{-h,--help}"[show this help message and exit]"
)

_shtab_repodoc_dots=(
  "(- :)"{-h,--help}"[show this help message and exit]"
)

_shtab_repodoc_get_vars=(
  "(- :)"{-h,--help}"[show this help message and exit]"
  {-t,--template_name}"[name of template e.g README.md or README.md.j2]:template_name:(.gitattributes .gitignore .mailmap MANIFEST.in README.md readthedocs.yml setup.cfg setup.py Makefile api.rst conf.py contents.rst index.rst make.bat requirements.txt AGPL AGPLv3 APACHE BEERWARE BSDv2 BSDv3 BSDv4 FDL GMGPL GPLv1 GPLv2 GPLv3 ISC LGPLv2 LGPLv3 MIT MPLv2 WTFPL CODE_OF_CONDUCT.md CONTRIBUTING.rst FUNDING.yml bug_report.md config.yml feature_request.md PULL_REQUEST_TEMPLATE.md SECURITY.md SUPPORT.md)"
  {-a,--all}"[Get all variables for all available templates.]"
  {-l,--list-all}"[List all available template names.]"
)

_shtab_repodoc_licence=(
  "(- :)"{-h,--help}"[show this help message and exit]"
  {-a,--author-name}"[Author Name]:author_name:"
  {-p,--program-name}"[Program Name]:program_name:"
  ":Type of Licence to generate.:(AGPL AGPLv3 APACHE BEERWARE BSDv2 BSDv3 BSDv4 FDL GMGPL GPLv1 GPLv2 GPLv3 ISC LGPLv2 LGPLv3 MIT MPLv2 WTFPL)"
)

_shtab_repodoc_pypi=(
  "(- :)"{-h,--help}"[show this help message and exit]"
)

_shtab_repodoc_pypi_project=(
  "(- :)"{-h,--help}"[show this help message and exit]"
)

_shtab_repodoc_readme=(
  "(- :)"{-h,--help}"[show this help message and exit]"
)

_shtab_repodoc_sphinx=(
  "(- :)"{-h,--help}"[show this help message and exit]"
)

_shtab_repodoc_sphinx_docs=(
  "(- :)"{-h,--help}"[show this help message and exit]"
)

typeset -A opt_args
local context state line curcontext="$curcontext"

_arguments \
  $_shtab_repodoc_options_ \
   \
  ': :_shtab_repodoc_commands_' \
  '*::args:->args'

case $words[1] in
  ch) _arguments $_shtab_repodoc_ch ;;
  comh) _arguments $_shtab_repodoc_comh ;;
  community_health) _arguments $_shtab_repodoc_community_health ;;
  config) _arguments $_shtab_repodoc_config ;;
  docs) _arguments $_shtab_repodoc_docs ;;
  dot_files) _arguments $_shtab_repodoc_dot_files ;;
  dots) _arguments $_shtab_repodoc_dots ;;
  get_vars) _arguments $_shtab_repodoc_get_vars ;;
  licence) _arguments $_shtab_repodoc_licence ;;
  pypi) _arguments $_shtab_repodoc_pypi ;;
  pypi_project) _arguments $_shtab_repodoc_pypi_project ;;
  readme) _arguments $_shtab_repodoc_readme ;;
  sphinx) _arguments $_shtab_repodoc_sphinx ;;
  sphinx_docs) _arguments $_shtab_repodoc_sphinx_docs ;;
esac
